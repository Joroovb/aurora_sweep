/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define BASE 0
#define NAV 1
#define NUM 2
#define SYM 3


&mt {
  //  flavor = "tap-preferred";
   // tapping_term_ms = <200>;
};

/ {

    combos {
        compatible = "zmk,combos";
        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };

         combo_tab {
            timeout-ms = <50>;
            key-positions = <10 11>;
            bindings = <&kp TAB>;
        };

        combo_ralt {
            timeout-ms = <50>;
            key-positions = <17 16>;
            bindings = <&kp RALT>;
        };

        combo_lalt {
            timeout-ms = <50>;
            key-positions = <11 12>;
            bindings = <&kp LALT>;
        };

        combo_lgui {
            timeout-ms = <50>;
            key-positions = <12 13>;
            bindings = <&kp LGUI>;
        };


       combo_rgui {
            timeout-ms = <50>;
            key-positions = <17 18>;
            bindings = <&kp RGUI>;
        };



    };

#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q           &kp W           &kp E               &kp R             &kp T          &kp Y        &kp U              &kp I                &kp O           &kp P
&mt LEFT_GUI A  &mt LEFT_ALT S  &mt LEFT_CONTROL D  &mt LEFT_SHIFT F  &kp G          &kp H        &mt RIGHT_SHIFT J  &mt RIGHT_CONTROL K  &mt LEFT_ALT L  &mt RIGHT_GUI SQT
&kp Z           &kp X           &kp C               &kp V             &kp B          &kp N        &kp M              &kp CMMA             &kp DOT         &kp SLASH
                                                    &kp SPACE         &lt NAV TAB    &lt SYM RET  &lt NUM BSPC
            >;
        };

        nav_layer {
            bindings = <
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &none   &bt BT_CLR    &kp K_REDO  &kp K_PASTE  &kp K_COPY  &kp K_COPY  &kp K_UNDO
&trans        &trans        &trans        &trans  &none         &kp LEFT    &kp DOWN     &kp UP      &kp RIGHT   &kp CAPS
&none         &none         &none         &none   &none         &kp INS     &kp HOME     &kp PG_DN   &kp PG_UP   &kp END
                                          &none   &none         &trans      &trans
            >;
        };

        num_layer {
            bindings = <
&kp LBKT   &kp N7  &kp N8  &kp N9  &kp RBKT     &none  &none   &none   &none   &none
&kp SEMI   &kp N4  &kp N5  &kp N6  &kp EQUAL    &none  &trans  &trans  &trans  &trans
&kp GRAVE  &kp N1  &kp N2  &kp N3  &kp BSLH     &none  &none   &none   &none   &none
                           &mo N0  &kp MINUS    &none  &none
            >;
        };

        sym_layer {
            bindings = <
&kp LBRC   &kp AMPS  &kp STAR   &kp UNDERSCORE  &kp RBRC    &none  &none   &none   &none   &none
&kp COLON  &kp DLLR  &kp PRCNT  &kp CARET       &kp PLUS    &none  &trans  &trans  &trans  &trans
&kp TILDE  &kp EXCL  &kp AT     &kp HASH        &kp PIPE    &none  &none   &none   &none   &none
                                &kp LPAR        &kp RPAR    &none  &none
            >;
        };
    };
};

};

};
